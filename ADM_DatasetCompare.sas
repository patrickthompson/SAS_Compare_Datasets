
/*FIND THE BENEFICIARY IDS THAT EXIST IN THE NEW AND OLD DATASETS*/
PROC SQL;
SELECT COUNT(DISTINCT NEW.ENCRYPTED_BENEFICIARY_ID) AS NEW
, COUNT(DISTINCT OLD.ENCRYPTED_BENEFICIARY_ID) AS OLD
, COUNT(DISTINCT CASE WHEN NEW.ENCRYPTED_BENEFICIARY_ID IS NOT NULL AND OLD.ENCRYPTED_BENEFICIARY_ID IS NOT NULL THEN NEW.ENCRYPTED_BENEFICIARY_ID ELSE '' END) AS BOTH
, COUNT(DISTINCT CASE WHEN NEW.ENCRYPTED_BENEFICIARY_ID IS NOT NULL AND OLD.ENCRYPTED_BENEFICIARY_ID IS NULL THEN NEW.ENCRYPTED_BENEFICIARY_ID ELSE '' END) AS NEW_NOT_OLD
, COUNT(DISTINCT CASE WHEN OLD.ENCRYPTED_BENEFICIARY_ID IS NOT NULL AND NEW.ENCRYPTED_BENEFICIARY_ID IS NULL THEN OLD.ENCRYPTED_BENEFICIARY_ID ELSE '' END) AS NEW_NOT_OLD
FROM NEW
FULL JOIN OLD
	ON OLD.ENCRYPTED_BENEFICIARY_ID = NEW.ENCRYPTED_BENEFICIARY_ID;
QUIT;

PROC SQL;
CREATE TABLE COLNAMES_NEW AS 
SELECT MEMNAME, NAME AS NEWNAME
FROM DICTIONARY.COLUMNS
WHERE LIBNAME = 'WORK'
AND MEMNAME IN ('NEW');
QUIT;

PROC SQL;
CREATE TABLE COLNAMES_OLD AS 
SELECT MEMNAME, NAME AS OLDNAME
FROM DICTIONARY.COLUMNS
WHERE LIBNAME = 'WORK'
AND MEMNAME IN ('OLD');
QUIT;

PROC SQL;
SELECT COUNT(DISTINCT NEWNAME) AS NEW
, COUNT(DISTINCT OLDNAME) AS OLD
, COUNT(DISTINCT CASE WHEN NEWNAME IS NOT NULL AND OLDNAME IS NOT NULL THEN NEWNAME ELSE '' END) AS BOTH
, COUNT(DISTINCT CASE WHEN NEWNAME IS NOT NULL AND OLDNAME IS NULL THEN NEWNAME ELSE '' END) AS NEW_NOT_OLD
, COUNT(DISTINCT CASE WHEN OLDNAME IS NOT NULL AND NEWNAME IS NULL THEN OLDNAME ELSE '' END) AS NEW_NOT_OLD
FROM COLNAMES_NEW NEW
FULL JOIN COLNAMES_OLD OLD
	ON OLD.OLDNAME = NEW.NEWNAME;
QUIT;

PROC SQL;
